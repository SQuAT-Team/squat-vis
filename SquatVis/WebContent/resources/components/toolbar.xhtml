<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:tp="http://xmlns.jcp.org/jsf/composite/components"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:pf="http://primefaces.org/ui"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:composite="http://xmlns.jcp.org/jsf/composite">

<composite:interface>
</composite:interface>

<composite:implementation>
	<nav id="sidebar" class="col-2 bg-light sidebar">
	<div class="sidebar-sticky h-100 mh-100">
		
		<div class="h-90 mh-90">
		<div class="row mx-0 h-100 mh-100">
			<div class="col-12 px-1 h-100 mh-100">

				<!-- TAB CONTROL -->
				<div class="h-5 mh-5">
				<nav>
				<div class="nav nav-tabs btn-group btn-block" id="nav-tab"
					role="tablist">
					<a class="btn btn-outline-dark active" id="tab-selectors-tab"
						data-toggle="tab" href="#tab-selectors" role="tab"
						aria-controls="tab-selectors" aria-selected="true">Selectors </a>
					<a class="btn btn-outline-dark" id="tab-options-tab"
						data-toggle="tab" href="#tab-options" role="tab"
						aria-controls="tab-options" aria-selected="false">Options</a>
				</div>
				</nav>
				</div>

				<!-- TAB CONTENT -->
				<div class="h-95 mh-95 scrollable">
				<div class="tab-content" id="nav-tabContent mr-1">
					<div class="tab-pane fade show active" id="tab-selectors"
						role="tabpanel" aria-labelledby="tab-selectors-tab">
						<!-- SELECTORS START -->

						<div class="panel-group ml-2" id="accordion">

							<tp:toolbarList
								render="#{sessionInfo.getCurrentProjectInfo().selectorInfo.isComparison(candidate.candidateId)}"
								heading="COMPARISON"
								headingDescription="#{descriptionProvider.getComparisonDescription()}"
								badgeNumber="#{sessionInfo.getCurrentProjectInfo().selectorInfo.getNumberOfComparison()}"
								badgeColor="#ffa500"
								updateBadgeCommand="updateToolbarComparisonCounter"
								updateBadgeId="toolbarComparisonCounter"
								updateListCommand="updateToolbarComparison"
								iconClass=""
								iconColorClass=""
								search="false"
								button="true"
								buttonOneName="Selected"
								buttonOneFunction="selectorSelectAllComparison()"
								buttonTwoName="Clear"
								buttonTwoFunction="selectorClearComparison()"
								updateListId="toolbarComparison" comparison="true" />

							<tp:toolbarList
								render="#{sessionInfo.getCurrentProjectInfo().selectorInfo.isCurrent(candidate.candidateId)}"
								heading="CURRENT"
								headingDescription="#{descriptionProvider.getCurrentDescription()}"
								badgeNumber="#{sessionInfo.getCurrentProjectInfo().selectorInfo.getNumberOfCurrent()}"
								badgeColor="#00ffff"
								updateBadgeCommand="updateToolbarCurrentCounter"
								updateBadgeId="toolbarCurrentCounter"
								updateListCommand="updateToolbarCurrent"
								iconClass=""
								iconColorClass=""
								search="false"
								button="true"
								buttonOneName="Marked"
								buttonOneFunction="selectorMarkAllCurrent()"
								buttonTwoName="Clear"
								buttonTwoFunction="selectorClearCurrent()"
								updateListId="toolbarCurrent" comparison="false" />

							<tp:toolbarList
								render="#{sessionInfo.getCurrentProjectInfo().selectorInfo.isMarked(candidate.candidateId)}"
								heading="MARKED"
								headingDescription="#{descriptionProvider.getMarkedDescription()}"
								badgeNumber="#{sessionInfo.getCurrentProjectInfo().selectorInfo.getNumberOfMarked()}"
								badgeColor="#0080ff"
								updateBadgeCommand="updateToolbarMarkedCounter"
								updateBadgeId="toolbarMarkedCounter"
								updateListCommand="updateToolbarMarked"
								iconClass="far fa-star"
								iconColorClass="marked"
								search="false"
								button="true"
								buttonOneName="Selected"
								buttonOneFunction="selectorSelectAllMarked()"
								buttonTwoName="Clear"
								buttonTwoFunction="selectorClearMarked()"
								updateListId="toolbarMarked" comparison="false" />

							<tp:toolbarList
								render="#{sessionInfo.getCurrentProjectInfo().selectorInfo.isSelected(candidate.candidateId)}"
								heading="SELECTED"
								headingDescription="#{descriptionProvider.getSelectedDescription()}"
								badgeNumber="#{sessionInfo.getCurrentProjectInfo().selectorInfo.getNumberOfSelected()}"
								badgeColor="#8000ff"
								updateBadgeCommand="updateToolbarSelectedCounter"
								updateBadgeId="toolbarSelectedCounter"
								updateListCommand="updateToolbarSelected"
								iconClass="fas fa-star"
								iconColorClass="selected"
								search="false"
								button="true"
								buttonOneName="Export"
								buttonOneFunction="selectorExportAllSelected()"
								buttonTwoName="Clear"
								buttonTwoFunction="selectorClearSelected()"
								updateListId="toolbarSelected" comparison="false" />

							<tp:toolbarList
								render="true"
								heading="ALL"
								headingDescription="#{descriptionProvider.getAllDescription()}"
								badgeNumber="#{sessionInfo.getCurrentProjectInfo().selectorInfo.getNumberOfAll()}"
								badgeColor="#000000"
								updateBadgeCommand="updateToolbarAllCounter"
								updateBadgeId="toolbarAllCounter"
								updateListCommand="updateToolbarAll"
								iconClass=""
								iconColorClass=""
								search="true"
								button="true"
								buttonOneName="Suggested"
								buttonOneFunction="selectorAllSuggestedToCurrent()"
								buttonTwoName="Pareto"
								buttonTwoFunction="selectorAllParetoToCurrent()"
								updateListId="toolbarAll" comparison="false" />


					</div>
					<!-- SELECTORS END -->
				</div>
				<div class="tab-pane fade" id="tab-options" role="tabpanel"
					aria-labelledby="tab-options-tab">
					<!-- OPTIONS START -->

						<!-- MINIMIZED MATRIX OPTION -->
						<div class="custom-control custom-checkbox">
							<c:choose>
								<c:when
									test="${sessionInfo.getCurrentProjectInfo().optionsInfo.getUseMinimizedMatrix()}">
									<input type="checkbox" id="useMinimizedMatrixCheckbox"
										class="custom-control-input" checked="true"
										onchange="changeUseMinimizedMatrix()"> <label
										class="custom-control-label" for="useMinimizedMatrixCheckbox">Minimize Matrix</label> </input>
								</c:when>
								<c:otherwise>
									<input type="checkbox" id="useMinimizedMatrixCheckbox"
										class="custom-control-input" onchange="changeUseMinimizedMatrix()">
										<label class="custom-control-label"
										for="useMinimizedMatrixCheckbox">Minimize Matrix</label> </input>
								</c:otherwise>
							</c:choose>
						</div>
						
						<!-- NAME AS ID OPTION -->
						<div class="custom-control custom-checkbox">
							<c:choose>
								<c:when
									test="${sessionInfo.getCurrentProjectInfo().optionsInfo.getUseNameInsteadOfId()}">
									<input type="checkbox" id="useUseNameInsteadOfIdCheckbox"
										class="custom-control-input" checked="true"
										onchange="changeUseNameInsteadOfId()"> <label
										class="custom-control-label" for="useUseNameInsteadOfIdCheckbox">Name as ID</label> </input>
								</c:when>
								<c:otherwise>
									<input type="checkbox" id="useUseNameInsteadOfIdCheckbox"
										class="custom-control-input" onchange="changeUseNameInsteadOfId()">
										<label class="custom-control-label"
										for="useUseNameInsteadOfIdCheckbox">Name as ID</label> </input>
								</c:otherwise>
							</c:choose>
						</div>
						
						<!-- LINK LENGTH OPTION -->
						<h:form>
							<h:panelGrid columns="1" style="margin-bottom: 10px; width: 100%;">
								<h:outputText id="output1" value="Link Length: #{sessionInfo.getCurrentProjectInfo().optionsInfo.linkLength}"></h:outputText>
								<h:inputHidden id="txt1" value="#{sessionInfo.getCurrentProjectInfo().optionsInfo.linkLength}"></h:inputHidden>
								<pf:slider for="txt1"  minValue="10" maxValue="200" display="output1" style="width: auto;" displayTemplate="Link length: {value}">
									<pf:ajax event="slideEnd" process="txt1" />
								</pf:slider>
							</h:panelGrid>
						</h:form>
						<h:form>
							<h:panelGrid columns="1" style="margin-bottom: 10px; width: 100%;">
								<h:outputText id="output2" value="Population Opacity: #{sessionInfo.getCurrentProjectInfo().optionsInfo.populationTransparency}"></h:outputText>
								<h:inputHidden id="txt2" value="#{sessionInfo.getCurrentProjectInfo().optionsInfo.populationTransparency}"></h:inputHidden>
								<pf:slider for="txt2"  minValue="0.00" maxValue="0.30" step="0.01" display="output2" style="width: auto;" displayTemplate="Population Opacity: {value}">
									<pf:ajax event="slideEnd" process="txt2" />
								</pf:slider>
							</h:panelGrid>
						</h:form>
						
						<!-- Level Selection -->
						<c:choose>
							<c:when
								test="#{sessionInfo.getCurrentProjectInfo().levelInfo.getMode() == 'LAST'}">
							<div class="custom-control custom-radio" onclick = "setLevelMode('LAST')">
						  		<input type="radio" class="custom-control-input" id="defaultGroupExample1" name="levelSelectionGroup" checked="true"/>
						  		<label class="custom-control-label" for="defaultGroupExample1">Last</label>
							</div>
							</c:when>
							<c:otherwise>
							<div class="custom-control custom-radio" onclick = "setLevelMode('LAST')">
						  		<input type="radio" class="custom-control-input" id="defaultGroupExample1" name="levelSelectionGroup"/>
						  		<label class="custom-control-label" for="defaultGroupExample1">Last</label>
							</div>
							</c:otherwise>
						</c:choose>
						
						<c:choose>
							<c:when
								test="#{sessionInfo.getCurrentProjectInfo().levelInfo.getMode() == 'LAST_AND_PARENT'}">
							<div class="custom-control custom-radio" onclick = "setLevelMode('LAST_AND_PARENT')">
							  <input type="radio" class="custom-control-input" id="defaultGroupExample2" name="levelSelectionGroup" checked="true"/>
							  <label class="custom-control-label" for="defaultGroupExample2">Last+Parent</label>
							</div>
							</c:when>
							<c:otherwise>
							<div class="custom-control custom-radio" onclick = "setLevelMode('LAST_AND_PARENT')">
							  <input type="radio" class="custom-control-input" id="defaultGroupExample2" name="levelSelectionGroup"/>
							  <label class="custom-control-label" for="defaultGroupExample2">Last+Parent</label>
							</div>
							</c:otherwise>
						</c:choose>
						
						<c:choose>
							<c:when
								test="#{sessionInfo.getCurrentProjectInfo().levelInfo.getMode() == 'ALL'}">
							<div class="custom-control custom-radio" onclick = "setLevelMode('ALL')">
							  <input type="radio" class="custom-control-input" id="defaultGroupExample3" name="levelSelectionGroup" checked="true"/>
							  <label class="custom-control-label" for="defaultGroupExample3">All</label>
							</div>
							</c:when>
							<c:otherwise>
							<div class="custom-control custom-radio" onclick = "setLevelMode('ALL')">
							  <input type="radio" class="custom-control-input" id="defaultGroupExample3" name="levelSelectionGroup"/>
							  <label class="custom-control-label" for="defaultGroupExample3">All</label>
							</div>
							</c:otherwise>
						</c:choose>
						
						<c:choose>
							<c:when
								test="#{sessionInfo.getCurrentProjectInfo().levelInfo.getMode() == 'CUSTOM'}">
							<div class="custom-control custom-radio" onclick = "setLevelMode('CUSTOM')">
							  <input type="radio" class="custom-control-input" id="defaultGroupExample4" name="levelSelectionGroup" checked="true"/>
							  <label class="custom-control-label" for="defaultGroupExample4">Custom</label>
							</div>
							</c:when>
							<c:otherwise>
							<div class="custom-control custom-radio" onclick = "setLevelMode('CUSTOM')">
							  <input type="radio" class="custom-control-input" id="defaultGroupExample4" name="levelSelectionGroup"/>
							  <label class="custom-control-label" for="defaultGroupExample4">Custom</label>
							</div>
							</c:otherwise>
						</c:choose>
						
						<span>Custom Levels:</span>
						<h:form>
						<h:panelGroup layout="block"
						styleClass="list-group level-list"
						id="levelList">
						<c:forEach items="${sessionInfo.getAllLevels()}" var="level" varStatus="levelStatus">
						<h:panelGroup layout="block" styleClass="list-group-item level-entry p-1 pb-2 pl-2">
							<c:choose>
								<c:when
									test="${sessionInfo.getCurrentProjectInfo().levelInfo.isActiveLevel(levelStatus.index)}">
								<div class="custom-control custom-checkbox">
									<input type="checkbox" id="checkboxLevel${levelStatus.index}" class="custom-control-input" levelId="${levelStatus.index}" checked="true" onchange="handleLevelClick(this)">
									<label class="custom-control-label" for="checkboxLevel#{levelStatus.index}">Level ${levelStatus.index} (Size: ${level.getNumberOfCandidates()})</label>
									</input>
								</div>
								</c:when>
								<c:otherwise>
								<div class="custom-control custom-checkbox">
									<input type="checkbox" id="checkboxLevel${levelStatus.index}" class="custom-control-input" levelId="${levelStatus.index}" onchange="handleLevelClick(this)">
									<label class="custom-control-label" for="checkboxLevel#{levelStatus.index}">Level ${levelStatus.index} (Size: ${level.getNumberOfCandidates()})</label>
									</input>
								</div>
								</c:otherwise>
							</c:choose>
						</h:panelGroup>
						</c:forEach>
						</h:panelGroup>
						</h:form>
						
						<span>Custom Parent Levels:</span>
						<h:form>
						<h:panelGroup layout="block"
						styleClass="list-group parent-level-list"
						id="parentLevelList">
						<c:forEach items="${sessionInfo.getAllLevels()}" var="level" varStatus="levelStatus">
						<h:panelGroup layout="block" styleClass="list-group-item level-entry p-1 pb-2 pl-2">
							<c:choose>
								<c:when
									test="${sessionInfo.getCurrentProjectInfo().levelInfo.isActiveParentLevel(levelStatus.index)}">
								<div class="custom-control custom-checkbox">
									<input type="checkbox" id="checkboxParentLevel${levelStatus.index}" class="custom-control-input" levelId="${levelStatus.index}" checked="true" onchange="handleParentLevelClick(this)">
									<label class="custom-control-label" for="checkboxParentLevel${levelStatus.index}">Level ${levelStatus.index} (Size: ${level.getNumberOfCandidates()})</label>
									</input>
								</div>
								</c:when>
								<c:otherwise>
								<div class="custom-control custom-checkbox">
									<input type="checkbox" id="checkboxParentLevel${levelStatus.index}" class="custom-control-input" levelId="${levelStatus.index}" onchange="handleParentLevelClick(this)">
									<label class="custom-control-label" for="checkboxParentLevel${levelStatus.index}">Level ${levelStatus.index} (Size: ${level.getNumberOfCandidates()})</label>
									</input>
								</div>
								</c:otherwise>
							</c:choose>
						</h:panelGroup>
						</c:forEach>
						</h:panelGroup>
						</h:form>
						
						
						<!-- Pareto Selection -->
						<span>Pareto Selection:</span>
						<c:choose>
							<c:when
								test="#{sessionInfo.getCurrentProjectInfo().optionsInfo.getParetoMode() == 'UTILITY_LEVEL_PARETO'}">
							<div class="custom-control custom-radio" onclick = "setParetoMode('UTILITY_LEVEL_PARETO')">
						  		<input type="radio" class="custom-control-input" id="paretoGroup1" name="paretoSelectionGroup" checked="true"/>
						  		<label class="custom-control-label" for="paretoGroup1">Utility/Level-based</label>
							</div>
							</c:when>
							<c:otherwise>
							<div class="custom-control custom-radio" onclick = "setParetoMode('UTILITY_LEVEL_PARETO')">
						  		<input type="radio" class="custom-control-input" id="paretoGroup1" name="paretoSelectionGroup"/>
						  		<label class="custom-control-label" for="paretoGroup1">Utility/Level-based</label>
							</div>
							</c:otherwise>
						</c:choose>
						
						<c:choose>
							<c:when
								test="#{sessionInfo.getCurrentProjectInfo().optionsInfo.getParetoMode() == 'UTILITY_POPULATION_PARETO'}">
							<div class="custom-control custom-radio" onclick = "setParetoMode('UTILITY_POPULATION_PARETO')">
							  <input type="radio" class="custom-control-input" id="paretoGroup2" name="paretoSelectionGroup" checked="true"/>
							  <label class="custom-control-label" for="paretoGroup2">Utility/Population-based</label>
							</div>
							</c:when>
							<c:otherwise>
							<div class="custom-control custom-radio" onclick = "setParetoMode('UTILITY_POPULATION_PARETO')">
							  <input type="radio" class="custom-control-input" id="paretoGroup2" name="paretoSelectionGroup"/>
							  <label class="custom-control-label" for="paretoGroup2">Utility/Population-based</label>
							</div>
							</c:otherwise>
						</c:choose>
						
						<c:choose>
							<c:when
								test="#{sessionInfo.getCurrentProjectInfo().optionsInfo.getParetoMode() == 'REAL_VALUE_LEVEL_PARETO'}">
							<div class="custom-control custom-radio" onclick = "setParetoMode('REAL_VALUE_LEVEL_PARETO')">
							  <input type="radio" class="custom-control-input" id="paretoGroup3" name="paretoSelectionGroup" checked="true"/>
							  <label class="custom-control-label" for="paretoGroup3">Value/Level-based</label>
							</div>
							</c:when>
							<c:otherwise>
							<div class="custom-control custom-radio" onclick = "setParetoMode('REAL_VALUE_LEVEL_PARETO')">
							  <input type="radio" class="custom-control-input" id="paretoGroup3" name="paretoSelectionGroup"/>
							  <label class="custom-control-label" for="paretoGroup3">Value/Level-based</label>
							</div>
							</c:otherwise>
						</c:choose>
						
						<c:choose>
							<c:when
								test="#{sessionInfo.getCurrentProjectInfo().optionsInfo.getParetoMode() == 'REAL_VALUE_POPULATION_PARETO'}">
							<div class="custom-control custom-radio" onclick = "setParetoMode('REAL_VALUE_POPULATION_PARETO')">
							  <input type="radio" class="custom-control-input" id="paretoGroup4" name="paretoSelectionGroup" checked="true"/>
							  <label class="custom-control-label" for="paretoGroup4">Value/Population-based</label>
							</div>
							</c:when>
							<c:otherwise>
							<div class="custom-control custom-radio" onclick = "setParetoMode('REAL_VALUE_POPULATION_PARETO')">
							  <input type="radio" class="custom-control-input" id="paretoGroup4" name="paretoSelectionGroup"/>
							  <label class="custom-control-label" for="paretoGroup4">Value/Population-based</label>
							</div>
							</c:otherwise>
						</c:choose>
						
					<!-- OPTIONS END -->
				</div>
			</div>
			</div>
			<!-- END TAB CONTENT -->

		</div>
	</div>
	</div>
	
	<div class="h-10 mh-10">
		<div class="h-70 mh-70">
			<button type="button" onclick="location.reload();" class="btn btn-dark btn-block btn-edged h-100 mh-100">RELOAD</button>
		</div>
		<div class="h-30 mh-30">
		</div>
	</div>
	
	</div>
	</nav>

</composite:implementation>

</html>